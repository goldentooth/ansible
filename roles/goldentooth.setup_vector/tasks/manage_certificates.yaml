---
# Intelligent certificate management for Vector - generates certificates only when needed

- name: 'Check if Vector certificate needs renewal.'
  ansible.builtin.shell:
    cmd: |
      if [ ! -f "{{ vector.cert_path }}" ]; then
        echo "MISSING"
      else
        {{ step_ca.executable }} certificate needs-renewal "{{ vector.cert_path }}" && echo "NEEDS_RENEWAL" || echo "VALID"
      fi
  register: 'vector_cert_status'
  changed_when: false
  failed_when: false

- name: 'Debug certificate renewal status.'
  ansible.builtin.debug:
    msg: |
      Certificate status: {{ vector_cert_status.stdout }}
      Certificate renewal needed: {{ vector_cert_status.stdout in ['MISSING', 'NEEDS_RENEWAL'] }}

- name: 'Generate new certificate if missing or needs renewal.'
  block:

    - name: 'Ensure directory for Vector certs exists.'
      ansible.builtin.file:
        path: "{{ vector.certs_path }}"
        state: 'directory'
        owner: 'vector'
        group: 'vector'
        mode: '0755'

    - name: 'Generate certificate for Vector from step-ca.'
      ansible.builtin.shell:
        cmd: |
          {{ step_ca.executable }} \
            ca certificate \
            vector.{{ cluster.services_domain }} \
            "{{ vector.cert_path }}" \
            "{{ vector.key_path }}" \
            --provisioner="{{ step_ca.default_provisioner.name }}" \
            --password-file="{{ step_ca.default_provisioner.password_path }}" \
            --san="vector.{{ cluster.services_domain }}" \
            --san="vector" \
            --san='localhost' \
            --san="{{ clean_hostname }}" \
            --san="{{ clean_hostname }}.{{ cluster.node_domain }}" \
            --san="{{ ipv4_address }}" \
            --not-after='24h' \
            --console \
            --force
      notify:
        - 'Restart Vector service.'

    - name: 'Repair permissions on Vector certs.'
      ansible.builtin.file:
        path: "{{ item }}"
        state: 'file'
        owner: 'vector'
        group: 'root'
        mode: '0600'
      loop:
        - "{{ vector.cert_path }}"
        - "{{ vector.key_path }}"
      loop_control:
        loop_var: 'item'

    - name: 'Display certificate generation result.'
      ansible.builtin.debug:
        msg: "Certificate generated successfully for Vector"

  when: "vector_cert_status.stdout in ['MISSING', 'NEEDS_RENEWAL']"