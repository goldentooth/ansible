modules:
  # Standard HTTP probe for internal services
  http_2xx:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      follow_redirects: true
      preferred_ip_protocol: "ip4"
      fail_if_ssl: true
      
  # HTTPS probe for internal services using Step-CA certificate validation
  https_2xx_internal:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      follow_redirects: true
      preferred_ip_protocol: "ip4"
      tls_config:
        ca_file: {{ step_ca_cert_path }}
        cert_file: {{ step_ca_client_cert_path }}
        key_file: {{ step_ca_client_key_path }}
        server_name: ''
        insecure_skip_verify: false
        
  # HTTPS probe for external services using public CAs
  https_2xx_external:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      follow_redirects: true
      preferred_ip_protocol: "ip4"
      tls_config:
        insecure_skip_verify: false
        
  # TCP connectivity probe
  tcp_connect:
    prober: tcp
    timeout: 5s
    tcp:
      preferred_ip_protocol: "ip4"
      
  # DNS resolution probe
  dns_query:
    prober: dns
    timeout: 5s
    dns:
      query_name: "{{ cluster.domain }}"
      query_type: "A"
      valid_rcodes:
        - NOERROR
      preferred_ip_protocol: "ip4"
      
  # ICMP ping probe
  icmp_ping:
    prober: icmp
    timeout: 5s
    icmp:
      preferred_ip_protocol: "ip4"
      
  # HTTP with custom headers for authenticated endpoints
  http_2xx_auth:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      follow_redirects: true
      preferred_ip_protocol: "ip4"
      headers:
        Authorization: "Basic {{ haproxy_stats_auth | b64encode }}"
        
  # HTTPS probe for API endpoints with JSON response validation
  https_api_2xx:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      follow_redirects: true
      preferred_ip_protocol: "ip4"
      headers:
        Accept: "application/json"
      tls_config:
        ca_file: {{ step_ca_cert_path }}
        cert_file: {{ step_ca_client_cert_path }}
        key_file: {{ step_ca_client_key_path }}
        
  # SSH connectivity probe  
  ssh_banner:
    prober: tcp
    timeout: 10s
    tcp:
      preferred_ip_protocol: "ip4"
      query_response:
        - expect: "SSH-2.0"
          
  # Certificate expiry probe (specialized for certificate monitoring)
  cert_expiry:
    prober: http
    timeout: 15s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"] 
      follow_redirects: false
      preferred_ip_protocol: "ip4"
      tls_config:
        ca_file: {{ step_ca_cert_path }}
        insecure_skip_verify: false
      fail_if_not_ssl: true
      
  # Kubernetes API probe with specific headers
  k8s_api:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      follow_redirects: false
      preferred_ip_protocol: "ip4"
      headers:
        User-Agent: "blackbox-exporter/goldentooth"
      valid_status_codes: [200, 401, 403]  # 401/403 acceptable for auth-required endpoints
      
  # DNS query with specific record types
  dns_a_query:
    prober: dns
    timeout: 5s
    dns:
      query_name: "goldentooth.net"
      query_type: "A"
      valid_rcodes: ["NOERROR"]
      preferred_ip_protocol: "ip4"
      
  dns_aaaa_query:
    prober: dns  
    timeout: 5s
    dns:
      query_name: "goldentooth.net"
      query_type: "AAAA"
      valid_rcodes: ["NOERROR", "NXDOMAIN"]  # IPv6 may not exist
      preferred_ip_protocol: "ip4"