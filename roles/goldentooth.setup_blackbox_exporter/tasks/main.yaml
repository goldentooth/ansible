---
- name: 'Create blackbox exporter user.'
  ansible.builtin.user:
    name: 'blackbox-exporter'
    system: true
    shell: '/usr/sbin/nologin'
    home: '/var/lib/blackbox-exporter'
    create_home: false

- name: 'Create blackbox exporter directories.'
  ansible.builtin.file:
    path: "{{ item }}"
    state: 'directory'
    owner: 'blackbox-exporter'
    group: 'blackbox-exporter'
    mode: '0755'
  loop:
    - '/etc/blackbox-exporter'
    - '/etc/blackbox-exporter/tls'
    - '/var/lib/blackbox-exporter'

- name: 'Download and install blackbox exporter.'
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/blackbox_exporter/releases/download/v{{ blackbox_exporter_version }}/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}.tar.gz"
    dest: '/tmp'
    remote_src: true
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify:
    - 'Restart Blackbox Exporter.'

- name: 'Install blackbox exporter binary.'
  ansible.builtin.copy:
    src: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}/blackbox_exporter"
    dest: '/usr/local/bin/blackbox_exporter'
    owner: 'root'
    group: 'root'
    mode: '0755'
    remote_src: true
  notify:
    - 'Restart Blackbox Exporter.'

- name: 'Clean up download files.'
  ansible.builtin.file:
    path: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}"
    state: 'absent'

- name: 'Generate blackbox exporter configuration.'
  ansible.builtin.template:
    src: 'blackbox.yaml.j2'
    dest: '/etc/blackbox-exporter/blackbox.yaml'
    owner: 'blackbox-exporter'
    group: 'blackbox-exporter'
    mode: '0644'
  notify:
    - 'Restart Blackbox Exporter.'

- name: 'Request TLS certificate for blackbox exporter.'
  ansible.builtin.shell: |
    step ca certificate blackbox-exporter.{{ host.fqdn }} \
      {{ step_ca_client_cert_path }} {{ step_ca_client_key_path }} \
      --provisioner=default \
      --provisioner-password-file={{ step_ca.default_provisioner.password_path }} \
      --san=blackbox-exporter.{{ host.fqdn }} \
      --san=blackbox-exporter \
      --san={{ ansible_fqdn }} \
      --san={{ ipv4_address }} \
      --not-after=168h \
      --force
  environment:
    STEPPATH: '/root/.step'

- name: 'Set certificate ownership.'
  ansible.builtin.file:
    path: "{{ item }}"
    owner: 'blackbox-exporter'
    group: 'blackbox-exporter'
    mode: '0600'
  loop:
    - "{{ step_ca_client_cert_path }}"
    - "{{ step_ca_client_key_path }}"

- name: 'Create cert-renewer service directory for blackbox.'
  ansible.builtin.file:
    path: '/etc/systemd/system/cert-renewer@blackbox.service.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Generate certificate renewal configuration.'
  ansible.builtin.template:
    src: 'cert-renewer@blackbox.conf.j2'
    dest: '/etc/systemd/system/cert-renewer@blackbox.service.d/cert-renewer@blackbox.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'Reload Systemd.'

- name: 'Enable certificate renewal timer for blackbox exporter.'
  ansible.builtin.systemd_service:
    name: 'cert-renewer@blackbox.timer'
    enabled: true
    state: 'started'
    daemon_reload: true

- name: 'Generate blackbox exporter service.'
  ansible.builtin.template:
    src: 'blackbox.service.j2'
    dest: '/etc/systemd/system/blackbox-exporter.service'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'Reload Systemd.'
    - 'Restart Blackbox Exporter.'

- name: 'Generate blackbox targets for Prometheus service discovery.'
  ansible.builtin.template:
    src: 'blackbox_targets.yaml.j2'
    dest: "{{ prometheus_config_dir }}/file_sd/blackbox_targets.yaml"
    owner: 'prometheus'
    group: 'prometheus'
    mode: '0644'
  delegate_to: "{{ groups['prometheus'] | first }}"
  notify:
    - 'Restart Prometheus.'

- name: 'Configure Nginx proxy for blackbox exporter (optional).'
  ansible.builtin.template:
    src: 'nginx-blackbox.conf.j2'
    dest: '/etc/nginx/sites-enabled/blackbox.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  delegate_to: "{{ groups['haproxy'] | first }}"
  when: blackbox_exporter_nginx_proxy | default(false)
  notify:
    - 'Restart Nginx on the load balancer.'

- name: 'Enable and start blackbox exporter service.'
  ansible.builtin.systemd_service:
    name: 'blackbox-exporter'
    enabled: true
    state: 'started'
    daemon_reload: true

- name: 'Ensure blackbox exporter is running.'
  ansible.builtin.wait_for:
    port: "{{ blackbox_exporter_port }}"
    host: '127.0.0.1'
    delay: 5
    timeout: 30