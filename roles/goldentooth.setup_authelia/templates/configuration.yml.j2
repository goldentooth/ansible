---
###############################################################
#                   Authelia configuration                    #
###############################################################

server:
  address: tcp://{{ authelia_host }}:{{ authelia_port }}
  buffers:
    read: 4096
    write: 4096
  tls:
    certificate: /etc/authelia/tls.crt
    key: /etc/authelia/tls.key

log:
  level: info
  format: text
  file_path: {{ authelia_log_dir }}/authelia.log
  keep_stdout: true

telemetry:
  metrics:
    enabled: true
    address: tcp://{{ authelia_host }}:{{ authelia_metrics_port }}
    buffers:
      read: 4096
      write: 4096

totp:
  disable: false
  issuer: authelia.com
  algorithm: sha1
  digits: 6
  period: 30
  skew: 1
  secret_size: 32

webauthn:
  disable: false
  display_name: Goldentooth Authelia
  attestation_conveyance_preference: indirect
  user_verification: preferred
  timeout: 60s

{% if authelia_duo_enabled %}
duo_api:
  disable: false
  hostname: {{ authelia_duo_hostname }}
  integration_key: {{ authelia_duo_integration_key }}
  secret_key: {{ authelia_duo_secret_key }}
  enable_self_enrollment: false
{% endif %}

authentication_backend:
  password_reset:
    disable: false
    custom_url: ""

  file:
    path: {{ authelia_config_dir }}/users_database.yml
    password:
      algorithm: argon2id
      iterations: 3
      memory: 65536
      parallelism: 4
      key_length: 32
      salt_length: 16

password_policy:
  standard:
    enabled: true
    min_length: {{ authelia_password_policy_min_length }}
    max_length: {{ authelia_password_policy_max_length }}
    require_uppercase: {{ authelia_password_policy_require_uppercase | lower }}
    require_lowercase: {{ authelia_password_policy_require_lowercase | lower }}
    require_number: {{ authelia_password_policy_require_number | lower }}
    require_special: {{ authelia_password_policy_require_special | lower }}

access_control:
  default_policy: one_factor
  rules:
    # Allow access to Authelia API endpoints
    - domain: "auth.{{ authelia_domain }}"
      policy: bypass
      resources:
        - "^/api/.*$"

    # Public access to health check
    - domain: "*.{{ authelia_domain }}"
      policy: bypass
      resources:
        - "^/api/health$"

    # Require two factor for admin resources
    - domain: "*.{{ authelia_domain }}"
      policy: two_factor
      subject:
        - "group:admins"

    # Allow single factor for regular users
    - domain: "*.{{ authelia_domain }}"
      policy: one_factor

session:
  name: authelia_session
  same_site: lax
  secret: {{ authelia_session_secret }}
  expiration: {{ authelia_session_expiration }}
  inactivity: {{ authelia_session_inactivity }}
  remember_me: {{ authelia_session_remember_me_duration }}

  cookies:
    - domain: {{ authelia_session_domain }}
      authelia_url: https://auth.services.{{ authelia_domain }}
      default_redirection_url: https://{{ authelia_domain }}

{% if authelia_redis_enabled %}
  redis:
    host: {{ authelia_redis_host }}
    port: {{ authelia_redis_port }}
    database_index: 0
{% endif %}

regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 5m

storage:
{% if authelia_storage_backend == "sqlite" %}
  local:
    path: {{ authelia_storage_path }}
{% elif authelia_storage_backend == "postgres" %}
  postgres:
    host: {{ authelia_postgres_host }}
    port: {{ authelia_postgres_port }}
    database: {{ authelia_postgres_database }}
    username: {{ authelia_postgres_username }}
    password: {{ authelia_postgres_password }}
    sslmode: disable
{% endif %}
  encryption_key: {{ authelia_storage_encryption_key }}

notifier:
  disable_startup_check: false
{% if authelia_notifier_smtp_enabled is defined and authelia_notifier_smtp_enabled %}
  smtp:
    host: {{ authelia_notifier_smtp_host }}
    port: {{ authelia_notifier_smtp_port }}
    timeout: 15s
    username: {{ authelia_notifier_smtp_username }}
    password: {{ authelia_notifier_smtp_password }}
    sender: {{ authelia_notifier_smtp_sender }}
    identifier: {{ authelia_notifier_smtp_identifier | default(inventory_hostname) }}
    subject: "[Authelia] {title}"
    startup_check_address: {{ authelia_notifier_smtp_startup_check }}
    disable_require_tls: false
    disable_html_emails: false
    disable_starttls: false
{% else %}
  filesystem:
    filename: {{ authelia_notifier_filesystem_path }}/notification.txt
{% endif %}

{% if authelia_oidc_enabled %}
identity_providers:
  oidc:
    hmac_secret: {{ authelia_oidc_hmac_secret }}

    jwks:
      - key_id: 'authelia-goldentooth'
        algorithm: 'RS256'
        use: 'sig'
        key: |
{{ authelia_oidc_issuer_private_key_content | default('') }}
        certificate_chain: |
{{ authelia_oidc_issuer_certificate_chain_content | default('') }}

    lifespans:
      access_token: 30d
      authorize_code: 1m
      id_token: 30d
      refresh_token: 90d

    enable_client_debug_messages: false
    minimum_parameter_entropy: 8

    cors:
      endpoints:
        - authorization
        - token
        - revocation
        - introspection
        - userinfo
      allowed_origins_from_client_redirect_uris: true

    clients:

      - client_id: grafana
        client_name: Grafana Dashboard
        client_secret: "$argon2id$v=19$m=65536,t=3,p=4$DlBq5V+vKJwYE3/wLyP57Q$o7NjLlDST84OlUWFVS37aFVUiPPrg5gIf4XlBAkd8wI"
        authorization_policy: one_factor
        redirect_uris:
          - https://grafana.{{ cluster.services_domain | default('services.goldentooth.net') }}/login/generic_oauth
          - https://localhost:3000/login/generic_oauth
        scopes:
          - openid
          - profile
          - email
          - groups
          - offline_access
        grant_types:
          - authorization_code
          - refresh_token
        response_types:
          - code
        response_modes:
          - query
        token_endpoint_auth_method: client_secret_post
        userinfo_signed_response_alg: none
        token_endpoint_auth_signing_alg: RS256

      - client_id: argocd
        client_name: Argo CD Web
        client_secret: "$argon2id$v=19$m=65536,t=3,p=4$XySdwhLNDD9c2foBd2m4+g$ML7G+2UFX2OvV+bj2XMJ9DIb9tUDQW2BFlJ7u3aehP0"
        authorization_policy: one_factor
        redirect_uris:
          - https://argocd.{{ cluster.k8s_services_domain | default('services.k8s.goldentooth.net') }}/auth/callback
        scopes:
          - openid
          - groups
          - email
          - offline_access
        grant_types:
          - authorization_code
          - refresh_token
        response_types:
          - code
        response_modes:
          - query
        token_endpoint_auth_method: client_secret_post

      - client_id: argocd-cli
        client_name: Argo CD CLI
        public: true
        authorization_policy: one_factor
        redirect_uris:
          - http://localhost:8085/auth/callback
        scopes:
          - openid
          - offline_access
          - groups
          - email
        grant_types:
          - authorization_code
          - refresh_token
        response_types:
          - code
        response_modes:
          - query
        token_endpoint_auth_method: none
{% endif %}

identity_validation:
  reset_password:
    jwt_secret: {{ authelia_jwt_secret }}