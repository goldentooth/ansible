---
# Unified SeaweedFS setup role - handles bootstrap, installation, certificates, and configuration

- name: 'Bootstrap SeaweedFS storage infrastructure.'
  ansible.builtin.include_tasks: 'bootstrap_storage.yaml'

- name: 'Ensure SeaweedFS certificates are generated.'
  ansible.builtin.include_tasks: 'manage_certificates.yaml'

# Installation
- name: Create SeaweedFS directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - /etc/seaweedfs
    - /var/log/seaweedfs

- name: Download SeaweedFS binary
  ansible.builtin.get_url:
    url: "https://github.com/seaweedfs/seaweedfs/releases/download/{{ seaweedfs.version }}/linux_arm64.tar.gz"
    dest: "/tmp/seaweedfs-{{ seaweedfs.version }}.tar.gz"
    mode: '0644'
  when: ansible_architecture == "aarch64"

- name: Download SeaweedFS binary (x86_64)
  ansible.builtin.get_url:
    url: "https://github.com/seaweedfs/seaweedfs/releases/download/{{ seaweedfs.version }}/linux_amd64.tar.gz"
    dest: "/tmp/seaweedfs-{{ seaweedfs.version }}.tar.gz"
    mode: '0644'
  when: ansible_architecture == "x86_64"

- name: Extract SeaweedFS binary
  ansible.builtin.unarchive:
    src: "/tmp/seaweedfs-{{ seaweedfs.version }}.tar.gz"
    dest: /tmp
    remote_src: true
    creates: /tmp/weed

- name: Install SeaweedFS binary
  ansible.builtin.copy:
    src: /tmp/weed
    dest: /usr/local/bin/weed
    remote_src: true
    owner: root
    group: root
    mode: '0755'

- name: Clean up downloaded files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/seaweedfs-{{ seaweedfs.version }}.tar.gz"
    - /tmp/weed

# Master setup
- name: Create SeaweedFS master data directory
  ansible.builtin.file:
    path: "{{ seaweedfs.mount_path }}/master"
    state: directory
    owner: "{{ seaweedfs.uid }}"
    group: "{{ seaweedfs.gid }}"
    mode: '0755'

- name: Create SeaweedFS master systemd service
  ansible.builtin.template:
    src: seaweedfs-master-simple.service.j2
    dest: /etc/systemd/system/seaweedfs-master.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart seaweedfs-master

# Volume server setup
- name: Create SeaweedFS volume systemd service
  ansible.builtin.template:
    src: seaweedfs-volume-simple.service.j2
    dest: /etc/systemd/system/seaweedfs-volume.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart seaweedfs-volume

- name: Enable and start SeaweedFS services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
    daemon_reload: true
  loop:
    - seaweedfs-master
    - seaweedfs-volume

- name: Wait for SeaweedFS master to be ready
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address }}:9333/cluster/status"
    method: GET
    timeout: 30
  register: master_health_check
  until: master_health_check.status == 200
  retries: 10
  delay: 5

- name: Wait for SeaweedFS volume server to be ready
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address }}:8080/status"
    method: GET
    timeout: 30
  register: volume_health_check
  until: volume_health_check.status == 200
  retries: 10
  delay: 5

# Consul integration
- name: Create Consul service directory
  ansible.builtin.file:
    path: /etc/consul.d/services
    state: directory
    owner: consul
    group: consul
    mode: '0755'

- name: Register SeaweedFS master with Consul
  ansible.builtin.template:
    src: seaweedfs-master-consul-service.json.j2
    dest: /etc/consul.d/services/seaweedfs-master.json
    owner: consul
    group: consul
    mode: '0644'
  notify: reload consul

- name: Register SeaweedFS volume server with Consul
  ansible.builtin.template:
    src: seaweedfs-volume-consul-service.json.j2
    dest: /etc/consul.d/services/seaweedfs-volume.json
    owner: consul
    group: consul
    mode: '0644'
  notify: reload consul

# Step-CA certificate management integration
- name: Deploy SeaweedFS certificate renewal configuration
  ansible.builtin.template:
    src: cert-renewer@seaweedfs.conf.j2
    dest: "/etc/systemd/system/cert-renewer@seaweedfs.conf"
    owner: root
    group: root
    mode: '0644'

- name: Enable and start SeaweedFS certificate renewal timer
  ansible.builtin.systemd:
    name: cert-renewer@seaweedfs.timer
    enabled: true
    state: started
    daemon_reload: true

# Prometheus monitoring integration
- name: Deploy SeaweedFS Prometheus targets
  ansible.builtin.template:
    src: seaweedfs-targets.yaml.j2
    dest: "{{ prometheus_config_dir | default('/etc/prometheus') }}/file_sd/seaweedfs.yaml"
    owner: prometheus
    group: prometheus
    mode: '0644'
  delegate_to: "{{ groups['prometheus'] | first }}"
  run_once: true
  when: groups['prometheus'] is defined and groups['prometheus'] | length > 0

- name: Display SeaweedFS cluster status
  ansible.builtin.debug:
    msg: |
      SeaweedFS services started on {{ inventory_hostname }}:
      - Master: http://{{ ansible_default_ipv4.address }}:9333
      - Volume: http://{{ ansible_default_ipv4.address }}:8080
      - Consul: Services registered for discovery
      - Prometheus: Metrics endpoints configured for monitoring