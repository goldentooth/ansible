---
- name: 'Update `raspi-config`.'
  ansible.builtin.apt:
    name: 'raspi-config'
    update_cache: yes 
    state: 'present'
    cache_valid_time: 3600
  become: yes

- name: 'Set the timezone.'
  ansible.builtin.shell: "raspi-config nonint do_change_timezone {{ pi_timezone }}"
  become: yes
  changed_when: no

- name: 'Set the keyboard.'
  ansible.builtin.shell: "raspi-config nonint do_configure_keyboard {{ pi_keyboard }}"
  become: yes
  changed_when: no

- name: 'Set the WLAN country.'
  ansible.builtin.shell: "raspi-config nonint do_wifi_country {{ pi_wlan_country }}"
  become: yes
  changed_when: no

- name: 'Expand the filesystem.'
  ansible.builtin.shell: "raspi-config nonint do_expand_rootfs"
  become: yes
  changed_when: no

- name: 'Enable fan control.'
  ansible.builtin.lineinfile:
    path: '/boot/config.txt'
    regexp: '^#?dtoverlay=gpio-fan'
    line: "dtoverlay=gpio-fan,gpiopin={{ pi_fan_gpio }},temp={{ pi_fan_temp }}"
    state: 'present'
  ansible.builtin.shell: "dtoverlay=gpio-fan,gpiopin=14,temp=60000"
  become: yes

- name: 'Enable overclocking.'
  ansible.builtin.lineinfile:
    path: '/boot/config.txt'
    regexp: "^#?{{ line.prefix }}"
    line: "{{ line.line }}"
    state: 'present'
  become: yes
  loop:
    - prefix: 'arm_boost'
      line: 'arm_boost=1'
    - prefix: 'arm_freq'
      line: 'arm_freq={{ pi_overclock_freq }}'
    - prefix: 'over_voltage'
      line: 'over_voltage={{ pi_overclock_voltage }}'
  loop_control:
    loop_var: 'line'

- name: 'Disable the swapfile.'
  ansible.builtin.shell: 'dphys-swapfile swapoff'
  become: yes
  changed_when: no

- name: 'Uninstall the swapfile.'
  ansible.builtin.shell: 'dphys-swapfile uninstall'
  become: yes
  changed_when: no

- name: 'Disable the swapfile service.'
  ansible.builtin.systemd:
    name: 'dphys-swapfile'
    state: 'stopped'
    enabled: 'no'
  become: yes

# - name: 'Reboot.'
#   ansible.builtin.reboot:
#   become: yes
#   when: ''
