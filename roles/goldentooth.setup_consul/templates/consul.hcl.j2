datacenter = "{{ consul_datacenter }}"
domain = "{{ consul_domain }}"
data_dir = "{{ consul_opt_path }}"
encrypt = "{{ gossip_key.stdout }}"
bind_addr = "{{ ipv4_address }}"
retry_join = {{ groups['consul_server'] | map('extract', hostvars, 'ipv4_address') | ansible.builtin.to_json }}

tls {
  defaults {
    ca_file         = "{{ consul_agent_ca_path }}"
    cert_file       = "{{ consul_agent_cert_path }}"
    key_file        = "{{ consul_agent_key_path }}"
    verify_incoming = true
    verify_outgoing = true
  }
  internal_rpc {
    verify_server_hostname = true
  }
}

auto_encrypt {
  {% if clean_hostname in groups['consul_server'] %}
  allow_tls = true
  {% else %}
  tls = true
  {% endif %}
}

acl {
  enabled = true
  default_policy = "deny"
  enable_token_persistence = true
  {% if clean_hostname in groups['consul_client'] %}
  tokens {
    agent = "{{ consul_agent_token }}"
  }
  {% endif %}
}

telemetry {
  enable_host_metrics = true
  prometheus_retention_time = "60s"
  disable_hostname = true
}

{% if clean_hostname in groups['consul_server'] %}
server = true
bootstrap_expect = {{ groups['consul_server'] | length }}

ui_config {
  enabled = true
  metrics_provider = "prometheus"
  metrics_proxy {
    {% set listen_address, listen_port = prometheus_web_listen_address | split(':') -%}
    base_url = "http://{{ hostvars[groups['prometheus'] | first].ipv4_address }}:{{ listen_port }}"
  }
}

connect {
  enabled = true
}

{% endif %}

client_addr = "{{ ipv4_address }}"

ports {
  http      = 8500
  https     = 8501
  grpc      = 8502
  grpc_tls  = 8503
}
