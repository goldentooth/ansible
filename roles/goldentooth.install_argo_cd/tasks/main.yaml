---
- name: 'Add Argo Helm chart repository.'
  kubernetes.core.helm_repository:
    name: 'argo'
    repo_url: "{{ argo_cd_chart_repo_url }}"

- name: 'Install the Argo CD command-line interface.'
  ansible.builtin.apt:
    name: 'argocd'
    state: 'present'

- name: 'Install Argo CD from Helm chart.'
  kubernetes.core.helm:
    atomic: true
    chart_ref: 'argo/argo-cd'
    chart_version: "{{ argo_cd_chart_version }}"
    create_namespace: true
    release_name: 'argo-cd'
    release_namespace: 'argo-cd'
    release_values:
      nameOverride: 'argo-cd'
      global:
        domain: "{{ argo_cd_domain }}"
        # Add Prometheus scrape annotations to all metrics services. This can
        # be used as an alternative to the ServiceMonitors.
        addPrometheusAnnotations: true
        # Default network policy rules used by all components
        networkPolicy:
          # -- Create NetworkPolicy objects for all components
          create: false
          # -- Default deny all ingress traffic
          defaultDenyIngress: false
      configs:
        secret:
          createSecret: true
          argocdServerAdminPassword: "{{ vault.easy_password | password_hash('bcrypt') }}"
        repositories:
          gitops:
            type: 'git'
            name: 'gitops'
            url: "{{ argo_cd_app_repo_url }}"

      redis-ha:
        # Enable Redis high availability.
        enabled: true

      controller:
        replicas: 1

      server:
        autoscaling:
          enabled: true
          minReplicas: 2
        extraArgs:
          - '--insecure'
        service:
          type: 'ClusterIP'

      repoServer:
        autoscaling:
          enabled: true
          minReplicas: 2

      applicationSet:
        replicas: 2
    update_repo_cache: true
    wait: true
