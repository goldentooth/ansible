---
# This role sets up Consul ACL policies and node tokens using the management token from vault

- name: 'Setup ACL policies and tokens on server nodes.'
  block:

    - name: 'Create temporary directory to hold policies.'
      ansible.builtin.tempfile:
        state: 'directory'
      register: 'temp_policies_dir'

    - name: 'Create temporary policies directory.'
      ansible.builtin.file:
        path: "{{ temp_policies_dir.path }}/policies"
        state: 'directory'
        owner: 'consul'
        group: 'consul'
        mode: '0755'

    - name: 'Copy ACL policy files into destination directory.'
      ansible.builtin.copy:
        src: "{{ file }}"
        dest: "{{ temp_policies_dir.path }}/policies/{{ file | basename }}"
        owner: 'consul'
        group: 'consul'
        mode: '0644'
      with_fileglob: "{{ role_path }}/files/*.hcl"
      loop_control:
        loop_var: 'file'

    - name: 'List all ACL policy files in the remote directory.'
      ansible.builtin.find:
        paths: "{{ temp_policies_dir.path }}/policies"
      register: 'acl_policy_files'

    - name: 'Delete any Consul ACL policies that already exist.'
      ansible.builtin.shell:
        cmd: |
          consul acl policy delete \
            -name "{{ file.path | basename | split('.') | first }}"
      environment:
        CONSUL_HTTP_TOKEN: "{{ secret_vault.consul.mgmt_token }}"
      failed_when: false
      changed_when: false
      loop: "{{ acl_policy_files.files }}"
      loop_control:
        loop_var: 'file'

    - name: 'Generate the Consul ACL policies with the newly created policy files.'
      ansible.builtin.shell:
        cmd: |
          consul acl policy create \
            -name "{{ file.path | basename | split('.') | first }}" \
            -rules @policies/{{ file.path | basename }}
        chdir: "{{ temp_policies_dir.path }}"
      environment:
        CONSUL_HTTP_TOKEN: "{{ secret_vault.consul.mgmt_token }}"
      loop: "{{ acl_policy_files.files }}"
      loop_control:
        loop_var: 'file'

    - name: 'Create the node token with the newly created node policy.'
      ansible.builtin.shell:
        cmd: |
          consul acl token create \
            -description "server node token" \
            -policy-name node-policy
        chdir: "{{ temp_policies_dir.path }}"
      environment:
        CONSUL_HTTP_TOKEN: "{{ secret_vault.consul.mgmt_token }}"
      register: 'node_token_result'

    - name: 'Extract SecretID from node token creation.'
      ansible.builtin.set_fact:
        consul_node_token: "{{ node_token_result.stdout | regex_search('SecretID:\\s+([a-f0-9\\-]+)', '\\1') | first }}"

    - name: 'Create the node CLI token with the newly created node-cli policy.'
      ansible.builtin.shell:
        cmd: |
          consul acl token create \
            -description "node cli token" \
            -policy-name node-cli-policy
        chdir: "{{ temp_policies_dir.path }}"
      environment:
        CONSUL_HTTP_TOKEN: "{{ secret_vault.consul.mgmt_token }}"
      register: 'node_cli_token_result'

    - name: 'Extract SecretID from cli token creation.'
      ansible.builtin.set_fact:
        consul_node_cli_token: "{{ node_cli_token_result.stdout | regex_search('SecretID:\\s+([a-f0-9\\-]+)', '\\1') | first }}"


  when: "inventory_hostname in groups['consul_server']"
  run_once: true

- name: 'Setup all Consul servers.'
  block:

    - name: 'Set the agent token to the server node token.'
      ansible.builtin.shell:
        cmd: |
          consul acl set-agent-token \
            agent "{{ consul_node_token }}"
      environment:
        CONSUL_HTTP_TOKEN: "{{ secret_vault.consul.mgmt_token }}"
      notify:
        - 'Restart Consul service.'

  when: "inventory_hostname in groups['consul_server']"

- name: 'Set Consul ACL token system-wide.'
  ansible.builtin.template:
    src: 'consul-acl-env.sh.j2'
    dest: '/etc/profile.d/consul-acl-env.sh'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Setup all Consul clients.'
  block:

    - name: 'Create a new client node token.'
      ansible.builtin.shell:
        cmd: |
          consul acl token create \
            -description "Agent token for {{ clean_hostname }}" \
            -node-identity "{{ clean_hostname }}:{{ consul.datacenter }}"
      delegate_to: "{{ groups['consul_server'] | first }}"
      environment:
        CONSUL_HTTP_TOKEN: "{{ secret_vault.consul.mgmt_token }}"
      register: 'client_node_token_result'

    - name: 'Extract SecretID from client node token creation.'
      ansible.builtin.set_fact:
        consul_client_node_token: "{{ client_node_token_result.stdout | regex_search('SecretID:\\s+([a-f0-9\\-]+)', '\\1') | first }}"

    - name: 'Add the client node token.'
      ansible.builtin.lineinfile:
        path: "{{ consul.hcl_config_path }}"
        line: "    agent = \"{{consul_client_node_token}}\""
        regex: '^\s+agent = .*'
        state: 'present'
      notify:
        - 'Restart Consul service.'

    - name: 'Debug the client node token.'
      ansible.builtin.debug:
        msg: "{{ consul_client_node_token }}"

  when: "inventory_hostname in groups['consul_client']"