datacenter = "{{ nomad_datacenter }}"
data_dir  = "{{ nomad_data_path }}"
bind_addr = "{{ ipv4_address }}"

{% if clean_hostname in groups['nomad_server'] -%}
server {
  enabled          = true
  bootstrap_expect = {{ groups['nomad_server'] | length }}
  encrypt = "{{ nomad_gossip_key.stdout }}"
  heartbeat_grace = "1h"
  // server_join {
  //   retry_join     = {{ groups['nomad_server'] | map('extract', hostvars, 'ipv4_address') | ansible.builtin.to_json }}
  //   retry_max      = 3
  //   retry_interval = "15s"
  // }
}
{% endif %}

consul {
  address             = "{{ ipv4_address }}:8500"
  token               = "{{ nomad_consul_token['SecretID'] }}"
  grpc_address        = "{{ ipv4_address }}:8502"

  ssl                 = true
  ca_file             = "{{ nomad_consul_ca_path }}"
  cert_file           = "{{ nomad_consul_cert_path }}"
  key_file            = "{{ nomad_consul_key_path }}"
  verify_ssl          = true

  server_service_name = "nomad"
  client_service_name = "nomad-client"
  auto_advertise      = true
  server_auto_join    = true
  client_auto_join    = true
}

{% if clean_hostname in groups['nomad_client'] -%}
client {
  enabled = true
  // server_join {
  //   retry_join     = {{ groups['nomad_server'] | map('extract', hostvars, 'ipv4_address') | ansible.builtin.to_json }}
  //   retry_max      = 3
  //   retry_interval = "15s"
  // }
}
{% endif %}

tls {
  http = true
  rpc  = true

  ca_file   = "{{ nomad_ca_cert_path }}"

  {% if clean_hostname in groups['nomad_server'] -%}

  cert_file = "{{ nomad_server_cert_path }}"
  key_file  = "{{ nomad_server_key_path }}"

  {% else -%}

  cert_file = "{{ nomad_client_cert_path }}"
  key_file  = "{{ nomad_client_key_path }}"

  {% endif %}

  verify_server_hostname = true
  verify_https_client    = true
}

ui {
  enabled =  true

  content_security_policy {
    connect_src     = ["*"]
    default_src     = ["'none'"]
    form_action     = ["'none'"]
    frame_ancestors = ["'none'"]
    img_src         = ["'self'","data:"]
    script_src      = ["'self'"]
    style_src       = ["'self'","'unsafe-inline'"]
  }

  label {
    text             = "Staging Cluster"
    background_color = "yellow"
    text_color       = "#000000"
  }
}