---
- name: 'Ensure step CLI is installed'
  ansible.builtin.package:
    name: 'step-cli'
    state: 'present'

- name: 'Create step certificates directory'
  ansible.builtin.file:
    path: '/etc/step/certs'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Create .step directory for root'
  ansible.builtin.file:
    path: '/root/.step'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0700'

- name: 'Ensure provisioner password file exists'
  ansible.builtin.copy:
    content: "{{ step_ca.default_provisioner.password }}"
    dest: "{{ step_ca.default_provisioner.password_path }}"
    owner: 'root'
    group: 'root'
    mode: '0600'
  no_log: true

- name: 'Retrieve SSH CA public keys from CA server'
  block:
    - name: 'Get SSH User CA public key'
      ansible.builtin.slurp:
        src: "{{ step_ca.ca.etc_path }}/certs/ssh_user_ca_key.pub"
      register: 'ssh_user_ca_key_b64'
      delegate_to: "{{ step_ca.server }}"
      run_once: true
      become: true

    - name: 'Get SSH Host CA public key'
      ansible.builtin.slurp:
        src: "{{ step_ca.ca.etc_path }}/certs/ssh_host_ca_key.pub"
      register: 'ssh_host_ca_key_b64'
      delegate_to: "{{ step_ca.server }}"
      run_once: true
      become: true

- name: 'Set SSH CA key facts'
  ansible.builtin.set_fact:
    ssh_user_ca_key: "{{ ssh_user_ca_key_b64.content | b64decode | trim }}"
    ssh_host_ca_key: "{{ ssh_host_ca_key_b64.content | b64decode | trim }}"

- name: 'Install SSH User CA public key for sshd'
  ansible.builtin.copy:
    content: "{{ ssh_user_ca_key }}"
    dest: '/etc/ssh/ssh_user_ca.pub'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'reload sshd'

- name: 'Configure sshd to trust User CA'
  ansible.builtin.lineinfile:
    path: '/etc/ssh/sshd_config'
    regexp: '^#?TrustedUserCAKeys'
    line: 'TrustedUserCAKeys /etc/ssh/ssh_user_ca.pub'
    state: 'present'
    validate: '/usr/sbin/sshd -t -f %s'
  notify: 'reload sshd'

- name: 'Check if host key exists'
  ansible.builtin.stat:
    path: '/etc/ssh/ssh_host_ed25519_key'
  register: 'host_key_stat'

- name: 'Generate host key if missing'
  ansible.builtin.command:
    cmd: 'ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ""'
    creates: '/etc/ssh/ssh_host_ed25519_key'
  when: not host_key_stat.stat.exists

- name: 'Copy host private key to step certs directory'
  ansible.builtin.copy:
    src: '/etc/ssh/ssh_host_ed25519_key'
    dest: '/etc/step/certs/ssh_host.key'
    remote_src: true
    owner: 'root'
    group: 'root' 
    mode: '0600'

- name: 'Generate host SSH public key in step certs directory'
  ansible.builtin.shell:
    cmd: 'ssh-keygen -y -f /etc/step/certs/ssh_host.key > /etc/step/certs/ssh_host.key.pub'
    creates: '/etc/step/certs/ssh_host.key.pub'

- name: 'Generate SSH host certificate'
  ansible.builtin.shell:
    cmd: |
      step ssh certificate \
        --host \
        --sign \
        --force \
        --no-password \
        --insecure \
        --provisioner="{{ step_ca.default_provisioner.name }}" \
        --provisioner-password-file="{{ step_ca.default_provisioner.password_path }}" \
        --principal="{{ ansible_hostname }}" \
        --principal="{{ ansible_hostname }}.{{ cluster.node_domain }}" \
        --principal="{{ ansible_hostname }}.{{ cluster.domain }}" \
        --principal="{{ ansible_default_ipv4.address }}" \
        --ca-url="https://{{ hostvars[step_ca.server].ipv4_address }}:9443" \
        --root="{{ step_ca.root_cert_path }}" \
        --not-after=24h \
        {{ ansible_hostname }} \
        /etc/step/certs/ssh_host.key.pub
    creates: '/etc/step/certs/ssh_host.key-cert.pub'

- name: 'Configure sshd to use host certificate'
  ansible.builtin.blockinfile:
    path: '/etc/ssh/sshd_config'
    block: |
      # SSH Host Certificate
      HostKey /etc/step/certs/ssh_host.key
      HostCertificate /etc/step/certs/ssh_host.key-cert.pub
    marker: '# {mark} ANSIBLE MANAGED BLOCK - SSH HOST CERTIFICATE'
    validate: '/usr/sbin/sshd -t -f %s'
  notify: 'reload sshd'

- name: 'Configure SSH client to trust Host CA'
  ansible.builtin.lineinfile:
    path: '/etc/ssh/ssh_known_hosts'
    line: "@cert-authority * {{ ssh_host_ca_key }}"
    create: true
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Configure SSH client to use global known hosts'
  ansible.builtin.lineinfile:
    path: '/etc/ssh/ssh_config'
    regexp: '^#?GlobalKnownHostsFile'
    line: 'GlobalKnownHostsFile /etc/ssh/ssh_known_hosts'
    state: 'present'

- name: 'Disable StrictHostKeyChecking for cluster nodes'
  ansible.builtin.blockinfile:
    path: '/etc/ssh/ssh_config'
    block: |
      Host *.{{ cluster.node_domain }} *.{{ cluster.domain }}
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
    marker: '# {mark} ANSIBLE MANAGED BLOCK - CLUSTER SSH CONFIG'

- name: 'Create SSH host certificate renewal service'
  ansible.builtin.template:
    src: 'ssh-host-cert-renewer.service.j2'
    dest: '/etc/systemd/system/ssh-host-cert-renewer.service'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Create SSH host certificate renewal timer'
  ansible.builtin.template:
    src: 'ssh-host-cert-renewer.timer.j2'
    dest: '/etc/systemd/system/ssh-host-cert-renewer.timer'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Enable and start SSH host certificate renewal timer'
  ansible.builtin.systemd:
    name: 'ssh-host-cert-renewer.timer'
    enabled: true
    state: 'started'
    daemon_reload: true

- name: 'Ensure root user has SSH key'
  ansible.builtin.user:
    name: 'root'
    generate_ssh_key: true
    ssh_key_type: 'ecdsa'
    ssh_key_bits: 256


- name: 'Copy root SSH private key to step certs directory'
  ansible.builtin.copy:
    src: '/root/.ssh/id_ecdsa'
    dest: '/etc/step/certs/root_ssh_key'
    remote_src: true
    owner: 'root'
    group: 'root'
    mode: '0600'

- name: 'Generate root SSH public key in step certs directory'
  ansible.builtin.shell:
    cmd: 'ssh-keygen -y -f /etc/step/certs/root_ssh_key > /etc/step/certs/root_ssh_key.pub'
    creates: '/etc/step/certs/root_ssh_key.pub'

- name: 'Generate root user SSH certificate'
  ansible.builtin.shell:
    cmd: |
      step ssh certificate \
        --sign \
        --force \
        --no-password \
        --insecure \
        --provisioner="{{ step_ca.default_provisioner.name }}" \
        --provisioner-password-file="{{ step_ca.default_provisioner.password_path }}" \
        --principal="root" \
        --principal="{{ ansible_hostname }}-root" \
        --ca-url="https://{{ hostvars[step_ca.server].ipv4_address }}:9443" \
        --root="{{ step_ca.root_cert_path }}" \
        --not-after=24h \
        root@{{ ansible_hostname }} \
        /etc/step/certs/root_ssh_key.pub
    creates: '/etc/step/certs/root_ssh_key-cert.pub'

- name: 'Create SSH user certificate renewal service'
  ansible.builtin.template:
    src: 'ssh-user-cert-renewer.service.j2'
    dest: '/etc/systemd/system/ssh-user-cert-renewer.service'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Create SSH user certificate renewal timer'
  ansible.builtin.template:
    src: 'ssh-user-cert-renewer.timer.j2'
    dest: '/etc/systemd/system/ssh-user-cert-renewer.timer'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Enable and start SSH user certificate renewal timer'
  ansible.builtin.systemd:
    name: 'ssh-user-cert-renewer.timer'
    enabled: true
    state: 'started'
    daemon_reload: true

- name: 'Configure root SSH to use certificate'
  ansible.builtin.blockinfile:
    path: '/root/.ssh/config'
    create: true
    owner: 'root'
    group: 'root'
    mode: '0600'
    block: |
      Host *
          CertificateFile /etc/step/certs/root_ssh_key-cert.pub
          IdentityFile /etc/step/certs/root_ssh_key
    marker: '# {mark} ANSIBLE MANAGED BLOCK - SSH CERTIFICATE'

# Regular user SSH certificate setup
- name: 'Ensure regular user exists'
  ansible.builtin.user:
    name: "{{ my.name.lower }}"
    create_home: true
    shell: '/bin/bash'
    state: 'present'

- name: 'Create .step directory for regular user'
  ansible.builtin.file:
    path: "/home/{{ my.name.lower }}/.step"
    state: 'directory'
    owner: "{{ my.name.lower }}"
    group: "{{ my.name.lower }}"
    mode: '0700'

- name: 'Create user SSH directory'
  ansible.builtin.file:
    path: "/home/{{ my.name.lower }}/.ssh"
    state: 'directory'
    owner: "{{ my.name.lower }}"
    group: "{{ my.name.lower }}"
    mode: '0700'

- name: 'Install user SSH public key'
  ansible.builtin.authorized_key:
    user: "{{ my.name.lower }}"
    key: "{{ secret_vault.ssh_public_key }}"
    state: 'present'

- name: 'Generate SSH key for regular user if missing'
  ansible.builtin.user:
    name: "{{ my.name.lower }}"
    generate_ssh_key: true
    ssh_key_type: 'ed25519'
    ssh_key_file: ".ssh/id_ed25519"

- name: 'Copy user SSH private key to step certs directory'
  ansible.builtin.copy:
    src: "/home/{{ my.name.lower }}/.ssh/id_ed25519"
    dest: "/etc/step/certs/{{ my.name.lower }}_ssh_key"
    remote_src: true
    owner: 'root'
    group: 'root'
    mode: '0600'

- name: 'Generate user SSH public key in step certs directory'
  ansible.builtin.shell:
    cmd: "ssh-keygen -y -f /etc/step/certs/{{ my.name.lower }}_ssh_key > /etc/step/certs/{{ my.name.lower }}_ssh_key.pub"
    creates: "/etc/step/certs/{{ my.name.lower }}_ssh_key.pub"

- name: 'Generate regular user SSH certificate'
  ansible.builtin.shell:
    cmd: |
      step ssh certificate \
        --sign \
        --force \
        --no-password \
        --insecure \
        --provisioner="{{ step_ca.default_provisioner.name }}" \
        --provisioner-password-file="{{ step_ca.default_provisioner.password_path }}" \
        --principal="{{ my.name.lower }}" \
        --principal="{{ ansible_hostname }}-{{ my.name.lower }}" \
        --ca-url="https://{{ hostvars[step_ca.server].ipv4_address }}:9443" \
        --root="{{ step_ca.root_cert_path }}" \
        --not-after=24h \
        {{ my.name.lower }}@{{ ansible_hostname }} \
        /etc/step/certs/{{ my.name.lower }}_ssh_key.pub
    creates: "/etc/step/certs/{{ my.name.lower }}_ssh_key-cert.pub"

- name: 'Create SSH user certificate renewal service for regular user'
  ansible.builtin.template:
    src: 'ssh-user-cert-renewer-regular.service.j2'
    dest: "/etc/systemd/system/ssh-user-cert-renewer-{{ my.name.lower }}.service"
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Create SSH user certificate renewal timer for regular user'
  ansible.builtin.template:
    src: 'ssh-user-cert-renewer-regular.timer.j2'
    dest: "/etc/systemd/system/ssh-user-cert-renewer-{{ my.name.lower }}.timer"
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Enable and start SSH user certificate renewal timer for regular user'
  ansible.builtin.systemd:
    name: "ssh-user-cert-renewer-{{ my.name.lower }}.timer"
    enabled: true
    state: 'started'
    daemon_reload: true

- name: 'Copy user certificate to home directory'
  ansible.builtin.copy:
    src: "/etc/step/certs/{{ my.name.lower }}_ssh_key-cert.pub"
    dest: "/home/{{ my.name.lower }}/.ssh/id_ed25519-cert.pub"
    remote_src: true
    owner: "{{ my.name.lower }}"
    group: "{{ my.name.lower }}"
    mode: '0644'

- name: 'Copy user private key to home directory'
  ansible.builtin.copy:
    src: "/etc/step/certs/{{ my.name.lower }}_ssh_key"
    dest: "/home/{{ my.name.lower }}/.ssh/id_ed25519"
    remote_src: true
    owner: "{{ my.name.lower }}"
    group: "{{ my.name.lower }}"
    mode: '0600'

- name: 'Configure regular user SSH to use certificate'
  ansible.builtin.blockinfile:
    path: "/home/{{ my.name.lower }}/.ssh/config"
    create: true
    owner: "{{ my.name.lower }}"
    group: "{{ my.name.lower }}"
    mode: '0600'
    block: |
      Host *
          CertificateFile ~/.ssh/id_ed25519-cert.pub
          IdentityFile ~/.ssh/id_ed25519
    marker: '# {mark} ANSIBLE MANAGED BLOCK - SSH CERTIFICATE'